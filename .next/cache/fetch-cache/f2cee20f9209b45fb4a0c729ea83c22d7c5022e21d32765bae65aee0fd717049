{"kind":"FETCH","data":{"headers":{"access-control-allow-origin":"*","age":"0","alt-svc":"h3=\":443\"; ma=86400","cache-control":"max-age=600","cf-cache-status":"DYNAMIC","cf-ray":"97200444ac1bcec3-CGK","connection":"keep-alive","content-encoding":"br","content-type":"text/html; charset=utf-8","date":"Wed, 20 Aug 2025 07:00:58 GMT","expires":"Wed, 20 Aug 2025 06:14:32 GMT","last-modified":"Fri, 06 Dec 2024 15:53:06 GMT","nel":"{\"report_to\":\"cf-nel\",\"success_fraction\":0.0,\"max_age\":604800}","report-to":"{\"group\":\"cf-nel\",\"max_age\":604800,\"endpoints\":[{\"url\":\"https://a.nel.cloudflare.com/report/v4?s=8zgWlS7A90wyQZJJPdim%2FZuGlqrN7AfwDFQ6JFPpMxypd2pvh9sJWRit1QOsJ9aLumDfx3ZnONHfoGXtrZ%2BN11qU8bDy39bD\"}]}","server":"cloudflare","transfer-encoding":"chunked","vary":"Accept-Encoding","via":"1.1 varnish","x-cache":"HIT","x-cache-hits":"0","x-fastly-request-id":"7f1002749a427dd2161db6f67dbf2821035d329c","x-github-request-id":"D79B:33047A:8FD52:99358:68A56570","x-proxy-cache":"MISS","x-served-by":"cache-sin-wsss1830072-SIN","x-timer":"S1755673258.753219,VS0,VE249"},"body":"","status":200,"url":"https://arifr.id/akrab/"},"revalidate":31536000,"tags":[]}