"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/node-html-parser";
exports.ids = ["vendor-chunks/node-html-parser"];
exports.modules = {

/***/ "(rsc)/./node_modules/node-html-parser/dist/back.js":
/*!****************************************************!*\
  !*** ./node_modules/node-html-parser/dist/back.js ***!
  \****************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nfunction arr_back(arr) {\n    return arr[arr.length - 1];\n}\nexports[\"default\"] = arr_back;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L2JhY2suanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0Esa0JBQWUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXMtc3Rvay1ha3JhYi8uL25vZGVfbW9kdWxlcy9ub2RlLWh0bWwtcGFyc2VyL2Rpc3QvYmFjay5qcz8wM2ZlIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZnVuY3Rpb24gYXJyX2JhY2soYXJyKSB7XG4gICAgcmV0dXJuIGFyclthcnIubGVuZ3RoIC0gMV07XG59XG5leHBvcnRzLmRlZmF1bHQgPSBhcnJfYmFjaztcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/back.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/index.js":
/*!*****************************************************!*\
  !*** ./node_modules/node-html-parser/dist/index.js ***!
  \*****************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.NodeType = exports.TextNode = exports.Node = exports.valid = exports.CommentNode = exports.HTMLElement = exports.parse = void 0;\nvar comment_1 = __importDefault(__webpack_require__(/*! ./nodes/comment */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/comment.js\"));\nexports.CommentNode = comment_1.default;\nvar html_1 = __importDefault(__webpack_require__(/*! ./nodes/html */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/html.js\"));\nexports.HTMLElement = html_1.default;\nvar node_1 = __importDefault(__webpack_require__(/*! ./nodes/node */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/node.js\"));\nexports.Node = node_1.default;\nvar text_1 = __importDefault(__webpack_require__(/*! ./nodes/text */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/text.js\"));\nexports.TextNode = text_1.default;\nvar type_1 = __importDefault(__webpack_require__(/*! ./nodes/type */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/type.js\"));\nexports.NodeType = type_1.default;\nvar parse_1 = __importDefault(__webpack_require__(/*! ./parse */ \"(rsc)/./node_modules/node-html-parser/dist/parse.js\"));\nvar valid_1 = __importDefault(__webpack_require__(/*! ./valid */ \"(rsc)/./node_modules/node-html-parser/dist/valid.js\"));\nexports.valid = valid_1.default;\nfunction parse(data, options) {\n    if (options === void 0) { options = {}; }\n    return (0, parse_1.default)(data, options);\n}\nexports[\"default\"] = parse;\nexports.parse = parse;\nparse.parse = parse_1.default;\nparse.HTMLElement = html_1.default;\nparse.CommentNode = comment_1.default;\nparse.valid = valid_1.default;\nparse.Node = node_1.default;\nparse.TextNode = text_1.default;\nparse.NodeType = type_1.default;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2I7QUFDQSw2Q0FBNkM7QUFDN0M7QUFDQSw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsZ0JBQWdCLEdBQUcsZ0JBQWdCLEdBQUcsWUFBWSxHQUFHLGFBQWEsR0FBRyxtQkFBbUIsR0FBRyxtQkFBbUIsR0FBRyxhQUFhO0FBQzlILGdDQUFnQyxtQkFBTyxDQUFDLG9GQUFpQjtBQUN6RCxtQkFBbUI7QUFDbkIsNkJBQTZCLG1CQUFPLENBQUMsOEVBQWM7QUFDbkQsbUJBQW1CO0FBQ25CLDZCQUE2QixtQkFBTyxDQUFDLDhFQUFjO0FBQ25ELFlBQVk7QUFDWiw2QkFBNkIsbUJBQU8sQ0FBQyw4RUFBYztBQUNuRCxnQkFBZ0I7QUFDaEIsNkJBQTZCLG1CQUFPLENBQUMsOEVBQWM7QUFDbkQsZ0JBQWdCO0FBQ2hCLDhCQUE4QixtQkFBTyxDQUFDLG9FQUFTO0FBQy9DLDhCQUE4QixtQkFBTyxDQUFDLG9FQUFTO0FBQy9DLGFBQWE7QUFDYjtBQUNBLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0Esa0JBQWU7QUFDZixhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9kYXMtc3Rvay1ha3JhYi8uL25vZGVfbW9kdWxlcy9ub2RlLWh0bWwtcGFyc2VyL2Rpc3QvaW5kZXguanM/YTM0NyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbnZhciBfX2ltcG9ydERlZmF1bHQgPSAodGhpcyAmJiB0aGlzLl9faW1wb3J0RGVmYXVsdCkgfHwgZnVuY3Rpb24gKG1vZCkge1xuICAgIHJldHVybiAobW9kICYmIG1vZC5fX2VzTW9kdWxlKSA/IG1vZCA6IHsgXCJkZWZhdWx0XCI6IG1vZCB9O1xufTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMuTm9kZVR5cGUgPSBleHBvcnRzLlRleHROb2RlID0gZXhwb3J0cy5Ob2RlID0gZXhwb3J0cy52YWxpZCA9IGV4cG9ydHMuQ29tbWVudE5vZGUgPSBleHBvcnRzLkhUTUxFbGVtZW50ID0gZXhwb3J0cy5wYXJzZSA9IHZvaWQgMDtcbnZhciBjb21tZW50XzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbm9kZXMvY29tbWVudFwiKSk7XG5leHBvcnRzLkNvbW1lbnROb2RlID0gY29tbWVudF8xLmRlZmF1bHQ7XG52YXIgaHRtbF8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL25vZGVzL2h0bWxcIikpO1xuZXhwb3J0cy5IVE1MRWxlbWVudCA9IGh0bWxfMS5kZWZhdWx0O1xudmFyIG5vZGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ub2Rlcy9ub2RlXCIpKTtcbmV4cG9ydHMuTm9kZSA9IG5vZGVfMS5kZWZhdWx0O1xudmFyIHRleHRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ub2Rlcy90ZXh0XCIpKTtcbmV4cG9ydHMuVGV4dE5vZGUgPSB0ZXh0XzEuZGVmYXVsdDtcbnZhciB0eXBlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vbm9kZXMvdHlwZVwiKSk7XG5leHBvcnRzLk5vZGVUeXBlID0gdHlwZV8xLmRlZmF1bHQ7XG52YXIgcGFyc2VfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9wYXJzZVwiKSk7XG52YXIgdmFsaWRfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi92YWxpZFwiKSk7XG5leHBvcnRzLnZhbGlkID0gdmFsaWRfMS5kZWZhdWx0O1xuZnVuY3Rpb24gcGFyc2UoZGF0YSwgb3B0aW9ucykge1xuICAgIGlmIChvcHRpb25zID09PSB2b2lkIDApIHsgb3B0aW9ucyA9IHt9OyB9XG4gICAgcmV0dXJuICgwLCBwYXJzZV8xLmRlZmF1bHQpKGRhdGEsIG9wdGlvbnMpO1xufVxuZXhwb3J0cy5kZWZhdWx0ID0gcGFyc2U7XG5leHBvcnRzLnBhcnNlID0gcGFyc2U7XG5wYXJzZS5wYXJzZSA9IHBhcnNlXzEuZGVmYXVsdDtcbnBhcnNlLkhUTUxFbGVtZW50ID0gaHRtbF8xLmRlZmF1bHQ7XG5wYXJzZS5Db21tZW50Tm9kZSA9IGNvbW1lbnRfMS5kZWZhdWx0O1xucGFyc2UudmFsaWQgPSB2YWxpZF8xLmRlZmF1bHQ7XG5wYXJzZS5Ob2RlID0gbm9kZV8xLmRlZmF1bHQ7XG5wYXJzZS5UZXh0Tm9kZSA9IHRleHRfMS5kZWZhdWx0O1xucGFyc2UuTm9kZVR5cGUgPSB0eXBlXzEuZGVmYXVsdDtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/matcher.js":
/*!*******************************************************!*\
  !*** ./node_modules/node-html-parser/dist/matcher.js ***!
  \*******************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar type_1 = __importDefault(__webpack_require__(/*! ./nodes/type */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/type.js\"));\nfunction isTag(node) {\n    return node && node.nodeType === type_1.default.ELEMENT_NODE;\n}\nfunction getAttributeValue(elem, name) {\n    return isTag(elem) ? elem.getAttribute(name) : undefined;\n}\nfunction getName(elem) {\n    return ((elem && elem.rawTagName) || '').toLowerCase();\n}\nfunction getChildren(node) {\n    return node && node.childNodes;\n}\nfunction getParent(node) {\n    return node ? node.parentNode : null;\n}\nfunction getText(node) {\n    return node.text;\n}\nfunction removeSubsets(nodes) {\n    var idx = nodes.length;\n    var node;\n    var ancestor;\n    var replace;\n    // Check if each node (or one of its ancestors) is already contained in the\n    // array.\n    while (--idx > -1) {\n        node = ancestor = nodes[idx];\n        // Temporarily remove the node under consideration\n        nodes[idx] = null;\n        replace = true;\n        while (ancestor) {\n            if (nodes.indexOf(ancestor) > -1) {\n                replace = false;\n                nodes.splice(idx, 1);\n                break;\n            }\n            ancestor = getParent(ancestor);\n        }\n        // If the node has been found to be unique, re-insert it.\n        if (replace) {\n            nodes[idx] = node;\n        }\n    }\n    return nodes;\n}\nfunction existsOne(test, elems) {\n    return elems.some(function (elem) {\n        return isTag(elem) ? test(elem) || existsOne(test, getChildren(elem)) : false;\n    });\n}\nfunction getSiblings(node) {\n    var parent = getParent(node);\n    return parent ? getChildren(parent) : [];\n}\nfunction hasAttrib(elem, name) {\n    return getAttributeValue(elem, name) !== undefined;\n}\nfunction findOne(test, elems) {\n    var elem = null;\n    for (var i = 0, l = elems === null || elems === void 0 ? void 0 : elems.length; i < l && !elem; i++) {\n        var el = elems[i];\n        if (test(el)) {\n            elem = el;\n        }\n        else {\n            var childs = getChildren(el);\n            if (childs && childs.length > 0) {\n                elem = findOne(test, childs);\n            }\n        }\n    }\n    return elem;\n}\nfunction findAll(test, nodes) {\n    var result = [];\n    for (var i = 0, j = nodes.length; i < j; i++) {\n        if (!isTag(nodes[i]))\n            continue;\n        if (test(nodes[i]))\n            result.push(nodes[i]);\n        var childs = getChildren(nodes[i]);\n        if (childs)\n            result = result.concat(findAll(test, childs));\n    }\n    return result;\n}\nexports[\"default\"] = {\n    isTag: isTag,\n    getAttributeValue: getAttributeValue,\n    getName: getName,\n    getChildren: getChildren,\n    getParent: getParent,\n    getText: getText,\n    removeSubsets: removeSubsets,\n    existsOne: existsOne,\n    getSiblings: getSiblings,\n    hasAttrib: hasAttrib,\n    findOne: findOne,\n    findAll: findAll\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L21hdGNoZXIuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsbUJBQU8sQ0FBQyw4RUFBYztBQUNuRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvRkFBb0YsZ0JBQWdCO0FBQ3BHO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxPQUFPO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0JBQWU7QUFDZjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhcy1zdG9rLWFrcmFiLy4vbm9kZV9tb2R1bGVzL25vZGUtaHRtbC1wYXJzZXIvZGlzdC9tYXRjaGVyLmpzPzMyMDIiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19pbXBvcnREZWZhdWx0ID0gKHRoaXMgJiYgdGhpcy5fX2ltcG9ydERlZmF1bHQpIHx8IGZ1bmN0aW9uIChtb2QpIHtcbiAgICByZXR1cm4gKG1vZCAmJiBtb2QuX19lc01vZHVsZSkgPyBtb2QgOiB7IFwiZGVmYXVsdFwiOiBtb2QgfTtcbn07XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgdHlwZV8xID0gX19pbXBvcnREZWZhdWx0KHJlcXVpcmUoXCIuL25vZGVzL3R5cGVcIikpO1xuZnVuY3Rpb24gaXNUYWcobm9kZSkge1xuICAgIHJldHVybiBub2RlICYmIG5vZGUubm9kZVR5cGUgPT09IHR5cGVfMS5kZWZhdWx0LkVMRU1FTlRfTk9ERTtcbn1cbmZ1bmN0aW9uIGdldEF0dHJpYnV0ZVZhbHVlKGVsZW0sIG5hbWUpIHtcbiAgICByZXR1cm4gaXNUYWcoZWxlbSkgPyBlbGVtLmdldEF0dHJpYnV0ZShuYW1lKSA6IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGdldE5hbWUoZWxlbSkge1xuICAgIHJldHVybiAoKGVsZW0gJiYgZWxlbS5yYXdUYWdOYW1lKSB8fCAnJykudG9Mb3dlckNhc2UoKTtcbn1cbmZ1bmN0aW9uIGdldENoaWxkcmVuKG5vZGUpIHtcbiAgICByZXR1cm4gbm9kZSAmJiBub2RlLmNoaWxkTm9kZXM7XG59XG5mdW5jdGlvbiBnZXRQYXJlbnQobm9kZSkge1xuICAgIHJldHVybiBub2RlID8gbm9kZS5wYXJlbnROb2RlIDogbnVsbDtcbn1cbmZ1bmN0aW9uIGdldFRleHQobm9kZSkge1xuICAgIHJldHVybiBub2RlLnRleHQ7XG59XG5mdW5jdGlvbiByZW1vdmVTdWJzZXRzKG5vZGVzKSB7XG4gICAgdmFyIGlkeCA9IG5vZGVzLmxlbmd0aDtcbiAgICB2YXIgbm9kZTtcbiAgICB2YXIgYW5jZXN0b3I7XG4gICAgdmFyIHJlcGxhY2U7XG4gICAgLy8gQ2hlY2sgaWYgZWFjaCBub2RlIChvciBvbmUgb2YgaXRzIGFuY2VzdG9ycykgaXMgYWxyZWFkeSBjb250YWluZWQgaW4gdGhlXG4gICAgLy8gYXJyYXkuXG4gICAgd2hpbGUgKC0taWR4ID4gLTEpIHtcbiAgICAgICAgbm9kZSA9IGFuY2VzdG9yID0gbm9kZXNbaWR4XTtcbiAgICAgICAgLy8gVGVtcG9yYXJpbHkgcmVtb3ZlIHRoZSBub2RlIHVuZGVyIGNvbnNpZGVyYXRpb25cbiAgICAgICAgbm9kZXNbaWR4XSA9IG51bGw7XG4gICAgICAgIHJlcGxhY2UgPSB0cnVlO1xuICAgICAgICB3aGlsZSAoYW5jZXN0b3IpIHtcbiAgICAgICAgICAgIGlmIChub2Rlcy5pbmRleE9mKGFuY2VzdG9yKSA+IC0xKSB7XG4gICAgICAgICAgICAgICAgcmVwbGFjZSA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIG5vZGVzLnNwbGljZShpZHgsIDEpO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgYW5jZXN0b3IgPSBnZXRQYXJlbnQoYW5jZXN0b3IpO1xuICAgICAgICB9XG4gICAgICAgIC8vIElmIHRoZSBub2RlIGhhcyBiZWVuIGZvdW5kIHRvIGJlIHVuaXF1ZSwgcmUtaW5zZXJ0IGl0LlxuICAgICAgICBpZiAocmVwbGFjZSkge1xuICAgICAgICAgICAgbm9kZXNbaWR4XSA9IG5vZGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG5vZGVzO1xufVxuZnVuY3Rpb24gZXhpc3RzT25lKHRlc3QsIGVsZW1zKSB7XG4gICAgcmV0dXJuIGVsZW1zLnNvbWUoZnVuY3Rpb24gKGVsZW0pIHtcbiAgICAgICAgcmV0dXJuIGlzVGFnKGVsZW0pID8gdGVzdChlbGVtKSB8fCBleGlzdHNPbmUodGVzdCwgZ2V0Q2hpbGRyZW4oZWxlbSkpIDogZmFsc2U7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBnZXRTaWJsaW5ncyhub2RlKSB7XG4gICAgdmFyIHBhcmVudCA9IGdldFBhcmVudChub2RlKTtcbiAgICByZXR1cm4gcGFyZW50ID8gZ2V0Q2hpbGRyZW4ocGFyZW50KSA6IFtdO1xufVxuZnVuY3Rpb24gaGFzQXR0cmliKGVsZW0sIG5hbWUpIHtcbiAgICByZXR1cm4gZ2V0QXR0cmlidXRlVmFsdWUoZWxlbSwgbmFtZSkgIT09IHVuZGVmaW5lZDtcbn1cbmZ1bmN0aW9uIGZpbmRPbmUodGVzdCwgZWxlbXMpIHtcbiAgICB2YXIgZWxlbSA9IG51bGw7XG4gICAgZm9yICh2YXIgaSA9IDAsIGwgPSBlbGVtcyA9PT0gbnVsbCB8fCBlbGVtcyA9PT0gdm9pZCAwID8gdm9pZCAwIDogZWxlbXMubGVuZ3RoOyBpIDwgbCAmJiAhZWxlbTsgaSsrKSB7XG4gICAgICAgIHZhciBlbCA9IGVsZW1zW2ldO1xuICAgICAgICBpZiAodGVzdChlbCkpIHtcbiAgICAgICAgICAgIGVsZW0gPSBlbDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHZhciBjaGlsZHMgPSBnZXRDaGlsZHJlbihlbCk7XG4gICAgICAgICAgICBpZiAoY2hpbGRzICYmIGNoaWxkcy5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgZWxlbSA9IGZpbmRPbmUodGVzdCwgY2hpbGRzKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gZWxlbTtcbn1cbmZ1bmN0aW9uIGZpbmRBbGwodGVzdCwgbm9kZXMpIHtcbiAgICB2YXIgcmVzdWx0ID0gW107XG4gICAgZm9yICh2YXIgaSA9IDAsIGogPSBub2Rlcy5sZW5ndGg7IGkgPCBqOyBpKyspIHtcbiAgICAgICAgaWYgKCFpc1RhZyhub2Rlc1tpXSkpXG4gICAgICAgICAgICBjb250aW51ZTtcbiAgICAgICAgaWYgKHRlc3Qobm9kZXNbaV0pKVxuICAgICAgICAgICAgcmVzdWx0LnB1c2gobm9kZXNbaV0pO1xuICAgICAgICB2YXIgY2hpbGRzID0gZ2V0Q2hpbGRyZW4obm9kZXNbaV0pO1xuICAgICAgICBpZiAoY2hpbGRzKVxuICAgICAgICAgICAgcmVzdWx0ID0gcmVzdWx0LmNvbmNhdChmaW5kQWxsKHRlc3QsIGNoaWxkcykpO1xuICAgIH1cbiAgICByZXR1cm4gcmVzdWx0O1xufVxuZXhwb3J0cy5kZWZhdWx0ID0ge1xuICAgIGlzVGFnOiBpc1RhZyxcbiAgICBnZXRBdHRyaWJ1dGVWYWx1ZTogZ2V0QXR0cmlidXRlVmFsdWUsXG4gICAgZ2V0TmFtZTogZ2V0TmFtZSxcbiAgICBnZXRDaGlsZHJlbjogZ2V0Q2hpbGRyZW4sXG4gICAgZ2V0UGFyZW50OiBnZXRQYXJlbnQsXG4gICAgZ2V0VGV4dDogZ2V0VGV4dCxcbiAgICByZW1vdmVTdWJzZXRzOiByZW1vdmVTdWJzZXRzLFxuICAgIGV4aXN0c09uZTogZXhpc3RzT25lLFxuICAgIGdldFNpYmxpbmdzOiBnZXRTaWJsaW5ncyxcbiAgICBoYXNBdHRyaWI6IGhhc0F0dHJpYixcbiAgICBmaW5kT25lOiBmaW5kT25lLFxuICAgIGZpbmRBbGw6IGZpbmRBbGxcbn07XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/matcher.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/nodes/comment.js":
/*!*************************************************************!*\
  !*** ./node_modules/node-html-parser/dist/nodes/comment.js ***!
  \*************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar node_1 = __importDefault(__webpack_require__(/*! ./node */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/node.js\"));\nvar type_1 = __importDefault(__webpack_require__(/*! ./type */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/type.js\"));\nvar CommentNode = /** @class */ (function (_super) {\n    __extends(CommentNode, _super);\n    function CommentNode(rawText, parentNode, range, rawTagName) {\n        if (parentNode === void 0) { parentNode = null; }\n        if (rawTagName === void 0) { rawTagName = '!--'; }\n        var _this = _super.call(this, parentNode, range) || this;\n        _this.rawText = rawText;\n        _this.rawTagName = rawTagName;\n        /**\n         * Node Type declaration.\n         * @type {Number}\n         */\n        _this.nodeType = type_1.default.COMMENT_NODE;\n        return _this;\n    }\n    CommentNode.prototype.clone = function () {\n        return new CommentNode(this.rawText, null, undefined, this.rawTagName);\n    };\n    Object.defineProperty(CommentNode.prototype, \"text\", {\n        /**\n         * Get unescaped text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return this.rawText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    CommentNode.prototype.toString = function () {\n        return \"<!--\".concat(this.rawText, \"-->\");\n    };\n    return CommentNode;\n}(node_1.default));\nexports[\"default\"] = CommentNode;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L25vZGVzL2NvbW1lbnQuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxlQUFlLGdCQUFnQixzQ0FBc0Msa0JBQWtCO0FBQ3ZGLDhCQUE4QjtBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBLDZDQUE2QztBQUM3QztBQUNBLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCw2QkFBNkIsbUJBQU8sQ0FBQyx3RUFBUTtBQUM3Qyw2QkFBNkIsbUJBQU8sQ0FBQyx3RUFBUTtBQUM3QztBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckMscUNBQXFDO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQkFBa0I7QUFDbEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxvQkFBb0IsUUFBUTtBQUM1QjtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRCxrQkFBZSIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhcy1zdG9rLWFrcmFiLy4vbm9kZV9tb2R1bGVzL25vZGUtaHRtbC1wYXJzZXIvZGlzdC9ub2Rlcy9jb21tZW50LmpzP2VkZTAiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG52YXIgX19leHRlbmRzID0gKHRoaXMgJiYgdGhpcy5fX2V4dGVuZHMpIHx8IChmdW5jdGlvbiAoKSB7XG4gICAgdmFyIGV4dGVuZFN0YXRpY3MgPSBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBleHRlbmRTdGF0aWNzID0gT2JqZWN0LnNldFByb3RvdHlwZU9mIHx8XG4gICAgICAgICAgICAoeyBfX3Byb3RvX186IFtdIH0gaW5zdGFuY2VvZiBBcnJheSAmJiBmdW5jdGlvbiAoZCwgYikgeyBkLl9fcHJvdG9fXyA9IGI7IH0pIHx8XG4gICAgICAgICAgICBmdW5jdGlvbiAoZCwgYikgeyBmb3IgKHZhciBwIGluIGIpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwoYiwgcCkpIGRbcF0gPSBiW3BdOyB9O1xuICAgICAgICByZXR1cm4gZXh0ZW5kU3RhdGljcyhkLCBiKTtcbiAgICB9O1xuICAgIHJldHVybiBmdW5jdGlvbiAoZCwgYikge1xuICAgICAgICBpZiAodHlwZW9mIGIgIT09IFwiZnVuY3Rpb25cIiAmJiBiICE9PSBudWxsKVxuICAgICAgICAgICAgdGhyb3cgbmV3IFR5cGVFcnJvcihcIkNsYXNzIGV4dGVuZHMgdmFsdWUgXCIgKyBTdHJpbmcoYikgKyBcIiBpcyBub3QgYSBjb25zdHJ1Y3RvciBvciBudWxsXCIpO1xuICAgICAgICBleHRlbmRTdGF0aWNzKGQsIGIpO1xuICAgICAgICBmdW5jdGlvbiBfXygpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGQ7IH1cbiAgICAgICAgZC5wcm90b3R5cGUgPSBiID09PSBudWxsID8gT2JqZWN0LmNyZWF0ZShiKSA6IChfXy5wcm90b3R5cGUgPSBiLnByb3RvdHlwZSwgbmV3IF9fKCkpO1xuICAgIH07XG59KSgpO1xudmFyIF9faW1wb3J0RGVmYXVsdCA9ICh0aGlzICYmIHRoaXMuX19pbXBvcnREZWZhdWx0KSB8fCBmdW5jdGlvbiAobW9kKSB7XG4gICAgcmV0dXJuIChtb2QgJiYgbW9kLl9fZXNNb2R1bGUpID8gbW9kIDogeyBcImRlZmF1bHRcIjogbW9kIH07XG59O1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xudmFyIG5vZGVfMSA9IF9faW1wb3J0RGVmYXVsdChyZXF1aXJlKFwiLi9ub2RlXCIpKTtcbnZhciB0eXBlXzEgPSBfX2ltcG9ydERlZmF1bHQocmVxdWlyZShcIi4vdHlwZVwiKSk7XG52YXIgQ29tbWVudE5vZGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoX3N1cGVyKSB7XG4gICAgX19leHRlbmRzKENvbW1lbnROb2RlLCBfc3VwZXIpO1xuICAgIGZ1bmN0aW9uIENvbW1lbnROb2RlKHJhd1RleHQsIHBhcmVudE5vZGUsIHJhbmdlLCByYXdUYWdOYW1lKSB7XG4gICAgICAgIGlmIChwYXJlbnROb2RlID09PSB2b2lkIDApIHsgcGFyZW50Tm9kZSA9IG51bGw7IH1cbiAgICAgICAgaWYgKHJhd1RhZ05hbWUgPT09IHZvaWQgMCkgeyByYXdUYWdOYW1lID0gJyEtLSc7IH1cbiAgICAgICAgdmFyIF90aGlzID0gX3N1cGVyLmNhbGwodGhpcywgcGFyZW50Tm9kZSwgcmFuZ2UpIHx8IHRoaXM7XG4gICAgICAgIF90aGlzLnJhd1RleHQgPSByYXdUZXh0O1xuICAgICAgICBfdGhpcy5yYXdUYWdOYW1lID0gcmF3VGFnTmFtZTtcbiAgICAgICAgLyoqXG4gICAgICAgICAqIE5vZGUgVHlwZSBkZWNsYXJhdGlvbi5cbiAgICAgICAgICogQHR5cGUge051bWJlcn1cbiAgICAgICAgICovXG4gICAgICAgIF90aGlzLm5vZGVUeXBlID0gdHlwZV8xLmRlZmF1bHQuQ09NTUVOVF9OT0RFO1xuICAgICAgICByZXR1cm4gX3RoaXM7XG4gICAgfVxuICAgIENvbW1lbnROb2RlLnByb3RvdHlwZS5jbG9uZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgcmV0dXJuIG5ldyBDb21tZW50Tm9kZSh0aGlzLnJhd1RleHQsIG51bGwsIHVuZGVmaW5lZCwgdGhpcy5yYXdUYWdOYW1lKTtcbiAgICB9O1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShDb21tZW50Tm9kZS5wcm90b3R5cGUsIFwidGV4dFwiLCB7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBHZXQgdW5lc2NhcGVkIHRleHQgdmFsdWUgb2YgY3VycmVudCBub2RlIGFuZCBpdHMgY2hpbGRyZW4uXG4gICAgICAgICAqIEByZXR1cm4ge3N0cmluZ30gdGV4dCBjb250ZW50XG4gICAgICAgICAqL1xuICAgICAgICBnZXQ6IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJldHVybiB0aGlzLnJhd1RleHQ7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICBDb21tZW50Tm9kZS5wcm90b3R5cGUudG9TdHJpbmcgPSBmdW5jdGlvbiAoKSB7XG4gICAgICAgIHJldHVybiBcIjwhLS1cIi5jb25jYXQodGhpcy5yYXdUZXh0LCBcIi0tPlwiKTtcbiAgICB9O1xuICAgIHJldHVybiBDb21tZW50Tm9kZTtcbn0obm9kZV8xLmRlZmF1bHQpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IENvbW1lbnROb2RlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/nodes/comment.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/nodes/html.js":
/*!**********************************************************!*\
  !*** ./node_modules/node-html-parser/dist/nodes/html.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __assign = (this && this.__assign) || function () {\n    __assign = Object.assign || function(t) {\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\n            s = arguments[i];\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\n                t[p] = s[p];\n        }\n        return t;\n    };\n    return __assign.apply(this, arguments);\n};\nvar __spreadArray = (this && this.__spreadArray) || function (to, from, pack) {\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n        if (ar || !(i in from)) {\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n            ar[i] = from[i];\n        }\n    }\n    return to.concat(ar || Array.prototype.slice.call(from));\n};\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parse = exports.base_parse = void 0;\nvar css_select_1 = __webpack_require__(/*! css-select */ \"(rsc)/./node_modules/css-select/lib/index.js\");\nvar he_1 = __importDefault(__webpack_require__(/*! he */ \"(rsc)/./node_modules/he/he.js\"));\nvar back_1 = __importDefault(__webpack_require__(/*! ../back */ \"(rsc)/./node_modules/node-html-parser/dist/back.js\"));\nvar matcher_1 = __importDefault(__webpack_require__(/*! ../matcher */ \"(rsc)/./node_modules/node-html-parser/dist/matcher.js\"));\nvar void_tag_1 = __importDefault(__webpack_require__(/*! ../void-tag */ \"(rsc)/./node_modules/node-html-parser/dist/void-tag.js\"));\nvar comment_1 = __importDefault(__webpack_require__(/*! ./comment */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/comment.js\"));\nvar node_1 = __importDefault(__webpack_require__(/*! ./node */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/node.js\"));\nvar text_1 = __importDefault(__webpack_require__(/*! ./text */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/text.js\"));\nvar type_1 = __importDefault(__webpack_require__(/*! ./type */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/type.js\"));\nfunction decode(val) {\n    // clone string\n    return JSON.parse(JSON.stringify(he_1.default.decode(val)));\n}\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Block-level_elements\nvar Htags = ['h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'header', 'hgroup'];\nvar Dtags = ['details', 'dialog', 'dd', 'div', 'dt'];\nvar Ftags = ['fieldset', 'figcaption', 'figure', 'footer', 'form'];\nvar tableTags = ['table', 'td', 'tr'];\nvar htmlTags = ['address', 'article', 'aside', 'blockquote', 'br', 'hr', 'li', 'main', 'nav', 'ol', 'p', 'pre', 'section', 'ul'];\nvar kBlockElements = new Set();\nfunction addToKBlockElement() {\n    var args = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n    }\n    var addToSet = function (array) {\n        for (var index = 0; index < array.length; index++) {\n            var element = array[index];\n            kBlockElements.add(element);\n            kBlockElements.add(element.toUpperCase());\n        }\n    };\n    for (var _a = 0, args_1 = args; _a < args_1.length; _a++) {\n        var arg = args_1[_a];\n        addToSet(arg);\n    }\n}\naddToKBlockElement(Htags, Dtags, Ftags, tableTags, htmlTags);\nvar DOMTokenList = /** @class */ (function () {\n    function DOMTokenList(valuesInit, afterUpdate) {\n        if (valuesInit === void 0) { valuesInit = []; }\n        if (afterUpdate === void 0) { afterUpdate = function () { return null; }; }\n        this._set = new Set(valuesInit);\n        this._afterUpdate = afterUpdate;\n    }\n    DOMTokenList.prototype._validate = function (c) {\n        if (/\\s/.test(c)) {\n            throw new Error(\"DOMException in DOMTokenList.add: The token '\".concat(c, \"' contains HTML space characters, which are not valid in tokens.\"));\n        }\n    };\n    DOMTokenList.prototype.add = function (c) {\n        this._validate(c);\n        this._set.add(c);\n        this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.replace = function (c1, c2) {\n        this._validate(c2);\n        this._set.delete(c1);\n        this._set.add(c2);\n        this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.remove = function (c) {\n        this._set.delete(c) && this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.toggle = function (c) {\n        this._validate(c);\n        if (this._set.has(c))\n            this._set.delete(c);\n        else\n            this._set.add(c);\n        this._afterUpdate(this); // eslint-disable-line @typescript-eslint/no-unsafe-call\n    };\n    DOMTokenList.prototype.contains = function (c) {\n        return this._set.has(c);\n    };\n    Object.defineProperty(DOMTokenList.prototype, \"length\", {\n        get: function () {\n            return this._set.size;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DOMTokenList.prototype.values = function () {\n        return this._set.values();\n    };\n    Object.defineProperty(DOMTokenList.prototype, \"value\", {\n        get: function () {\n            return Array.from(this._set.values());\n        },\n        enumerable: false,\n        configurable: true\n    });\n    DOMTokenList.prototype.toString = function () {\n        return Array.from(this._set.values()).join(' ');\n    };\n    return DOMTokenList;\n}());\n/**\n * HTMLElement, which contains a set of children.\n *\n * Note: this is a minimalist implementation, no complete tree\n *   structure provided (no parentNode, nextSibling,\n *   previousSibling etc).\n * @class HTMLElement\n * @extends {Node}\n */\nvar HTMLElement = /** @class */ (function (_super) {\n    __extends(HTMLElement, _super);\n    /**\n     * Creates an instance of HTMLElement.\n     * @param keyAttrs\tid and class attribute\n     * @param [rawAttrs]\tattributes in string\n     *\n     * @memberof HTMLElement\n     */\n    function HTMLElement(tagName, keyAttrs, rawAttrs, parentNode, range, voidTag, _parseOptions) {\n        if (rawAttrs === void 0) { rawAttrs = ''; }\n        if (parentNode === void 0) { parentNode = null; }\n        if (voidTag === void 0) { voidTag = new void_tag_1.default(); }\n        if (_parseOptions === void 0) { _parseOptions = {}; }\n        var _this = _super.call(this, parentNode, range) || this;\n        _this.rawAttrs = rawAttrs;\n        _this.voidTag = voidTag;\n        /**\n         * Node Type declaration.\n         */\n        _this.nodeType = type_1.default.ELEMENT_NODE;\n        _this.rawTagName = tagName;\n        _this.rawAttrs = rawAttrs || '';\n        _this.id = keyAttrs.id || '';\n        _this.childNodes = [];\n        _this._parseOptions = _parseOptions;\n        _this.classList = new DOMTokenList(keyAttrs.class ? keyAttrs.class.split(/\\s+/) : [], function (classList) { return _this.setAttribute('class', classList.toString()); } // eslint-disable-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        );\n        if (keyAttrs.id) {\n            if (!rawAttrs) {\n                _this.rawAttrs = \"id=\\\"\".concat(keyAttrs.id, \"\\\"\");\n            }\n        }\n        if (keyAttrs.class) {\n            if (!rawAttrs) {\n                var cls = \"class=\\\"\".concat(_this.classList.toString(), \"\\\"\");\n                if (_this.rawAttrs) {\n                    _this.rawAttrs += \" \".concat(cls);\n                }\n                else {\n                    _this.rawAttrs = cls;\n                }\n            }\n        }\n        return _this;\n    }\n    /**\n     * Quote attribute values\n     * @param attr attribute value\n     * @returns {string} quoted value\n     */\n    HTMLElement.prototype.quoteAttribute = function (attr) {\n        if (attr == null) {\n            return 'null';\n        }\n        return JSON.stringify(attr.replace(/\"/g, '&quot;')).replace(/\\\\t/g, '\\t').replace(/\\\\n/g, '\\n').replace(/\\\\r/g, '\\r').replace(/\\\\/g, '');\n    };\n    /**\n     * Remove Child element from childNodes array\n     * @param {HTMLElement} node     node to remove\n     */\n    HTMLElement.prototype.removeChild = function (node) {\n        this.childNodes = this.childNodes.filter(function (child) {\n            return child !== node;\n        });\n        return this;\n    };\n    /**\n     * Exchanges given child with new child\n     * @param {HTMLElement} oldNode     node to exchange\n     * @param {HTMLElement} newNode     new node\n     */\n    HTMLElement.prototype.exchangeChild = function (oldNode, newNode) {\n        var children = this.childNodes;\n        this.childNodes = children.map(function (child) {\n            if (child === oldNode) {\n                return newNode;\n            }\n            return child;\n        });\n        return this;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"tagName\", {\n        get: function () {\n            return this.rawTagName ? this.rawTagName.toUpperCase() : this.rawTagName;\n        },\n        set: function (newname) {\n            this.rawTagName = newname.toLowerCase();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"localName\", {\n        get: function () {\n            return this.rawTagName.toLowerCase();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"isVoidElement\", {\n        get: function () {\n            return this.voidTag.isVoidElement(this.localName);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"rawText\", {\n        /**\n         * Get escpaed (as-it) text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            // https://github.com/taoqf/node-html-parser/issues/249\n            if (/^br$/i.test(this.rawTagName)) {\n                return '\\n';\n            }\n            return this.childNodes.reduce(function (pre, cur) {\n                return (pre += cur.rawText);\n            }, '');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"textContent\", {\n        get: function () {\n            return decode(this.rawText);\n        },\n        set: function (val) {\n            var content = [new text_1.default(val, this)];\n            this.childNodes = content;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"text\", {\n        /**\n         * Get unescaped text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return decode(this.rawText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"structuredText\", {\n        /**\n         * Get structured Text (with '\\n' etc.)\n         * @return {string} structured text\n         */\n        get: function () {\n            var currentBlock = [];\n            var blocks = [currentBlock];\n            function dfs(node) {\n                if (node.nodeType === type_1.default.ELEMENT_NODE) {\n                    if (kBlockElements.has(node.rawTagName)) {\n                        if (currentBlock.length > 0) {\n                            blocks.push((currentBlock = []));\n                        }\n                        node.childNodes.forEach(dfs);\n                        if (currentBlock.length > 0) {\n                            blocks.push((currentBlock = []));\n                        }\n                    }\n                    else {\n                        node.childNodes.forEach(dfs);\n                    }\n                }\n                else if (node.nodeType === type_1.default.TEXT_NODE) {\n                    if (node.isWhitespace) {\n                        // Whitespace node, postponed output\n                        currentBlock.prependWhitespace = true;\n                    }\n                    else {\n                        var text = node.trimmedText;\n                        if (currentBlock.prependWhitespace) {\n                            text = \" \".concat(text);\n                            currentBlock.prependWhitespace = false;\n                        }\n                        currentBlock.push(text);\n                    }\n                }\n            }\n            dfs(this);\n            return blocks\n                .map(function (block) {\n                return block.join('').replace(/\\s{2,}/g, ' '); // Normalize each line's whitespace\n            })\n                .join('\\n')\n                .replace(/\\s+$/, ''); // trimRight;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLElement.prototype.toString = function () {\n        var tag = this.rawTagName;\n        if (tag) {\n            var attrs = this.rawAttrs ? \" \".concat(this.rawAttrs) : '';\n            return this.voidTag.formatNode(tag, attrs, this.innerHTML);\n        }\n        return this.innerHTML;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"innerHTML\", {\n        get: function () {\n            return this.childNodes\n                .map(function (child) {\n                return child.toString();\n            })\n                .join('');\n        },\n        set: function (content) {\n            var r = parse(content, this._parseOptions);\n            var nodes = r.childNodes.length ? r.childNodes : [new text_1.default(content, this)];\n            resetParent(nodes, this);\n            resetParent(this.childNodes, null);\n            this.childNodes = nodes;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLElement.prototype.set_content = function (content, options) {\n        if (options === void 0) { options = {}; }\n        if (content instanceof node_1.default) {\n            content = [content];\n        }\n        else if (typeof content == 'string') {\n            options = __assign(__assign({}, this._parseOptions), options);\n            var r = parse(content, options);\n            content = r.childNodes.length ? r.childNodes : [new text_1.default(r.innerHTML, this)];\n        }\n        resetParent(this.childNodes, null);\n        resetParent(content, this);\n        this.childNodes = content;\n        return this;\n    };\n    HTMLElement.prototype.replaceWith = function () {\n        var _this = this;\n        var nodes = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            nodes[_i] = arguments[_i];\n        }\n        var parent = this.parentNode;\n        var content = nodes\n            .map(function (node) {\n            if (node instanceof node_1.default) {\n                return [node];\n            }\n            else if (typeof node == 'string') {\n                var r = parse(node, _this._parseOptions);\n                return r.childNodes.length ? r.childNodes : [new text_1.default(node, _this)];\n            }\n            return [];\n        })\n            .flat();\n        var idx = parent.childNodes.findIndex(function (child) {\n            return child === _this;\n        });\n        resetParent([this], null);\n        parent.childNodes = __spreadArray(__spreadArray(__spreadArray([], parent.childNodes.slice(0, idx), true), resetParent(content, parent), true), parent.childNodes.slice(idx + 1), true);\n        return this;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"outerHTML\", {\n        get: function () {\n            return this.toString();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Trim element from right (in block) after seeing pattern in a TextNode.\n     * @param  {RegExp} pattern pattern to find\n     * @return {HTMLElement}    reference to current node\n     */\n    HTMLElement.prototype.trimRight = function (pattern) {\n        for (var i = 0; i < this.childNodes.length; i++) {\n            var childNode = this.childNodes[i];\n            if (childNode.nodeType === type_1.default.ELEMENT_NODE) {\n                childNode.trimRight(pattern);\n            }\n            else {\n                var index = childNode.rawText.search(pattern);\n                if (index > -1) {\n                    childNode.rawText = childNode.rawText.substr(0, index);\n                    // trim all following nodes.\n                    this.childNodes.length = i + 1;\n                }\n            }\n        }\n        return this;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"structure\", {\n        /**\n         * Get DOM structure\n         * @return {string} structure\n         */\n        get: function () {\n            var res = [];\n            var indention = 0;\n            function write(str) {\n                res.push('  '.repeat(indention) + str);\n            }\n            function dfs(node) {\n                var idStr = node.id ? \"#\".concat(node.id) : '';\n                var classStr = node.classList.length ? \".\".concat(node.classList.value.join('.')) : ''; // eslint-disable-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/restrict-template-expressions, @typescript-eslint/no-unsafe-call\n                write(\"\".concat(node.rawTagName).concat(idStr).concat(classStr));\n                indention++;\n                node.childNodes.forEach(function (childNode) {\n                    if (childNode.nodeType === type_1.default.ELEMENT_NODE) {\n                        dfs(childNode);\n                    }\n                    else if (childNode.nodeType === type_1.default.TEXT_NODE) {\n                        if (!childNode.isWhitespace) {\n                            write('#text');\n                        }\n                    }\n                });\n                indention--;\n            }\n            dfs(this);\n            return res.join('\\n');\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Remove whitespaces in this sub tree.\n     * @return {HTMLElement} pointer to this\n     */\n    HTMLElement.prototype.removeWhitespace = function () {\n        var _this = this;\n        var o = 0;\n        this.childNodes.forEach(function (node) {\n            if (node.nodeType === type_1.default.TEXT_NODE) {\n                if (node.isWhitespace) {\n                    return;\n                }\n                node.rawText = node.trimmedRawText;\n            }\n            else if (node.nodeType === type_1.default.ELEMENT_NODE) {\n                node.removeWhitespace();\n            }\n            _this.childNodes[o++] = node;\n        });\n        this.childNodes.length = o;\n        return this;\n    };\n    /**\n     * Query CSS selector to find matching nodes.\n     * @param  {string}         selector Simplified CSS selector\n     * @return {HTMLElement[]}  matching elements\n     */\n    HTMLElement.prototype.querySelectorAll = function (selector) {\n        return (0, css_select_1.selectAll)(selector, this, {\n            xmlMode: true,\n            adapter: matcher_1.default,\n        });\n    };\n    /**\n     * Query CSS Selector to find matching node.\n     * @param  {string}         selector Simplified CSS selector\n     * @return {(HTMLElement|null)}    matching node\n     */\n    HTMLElement.prototype.querySelector = function (selector) {\n        return (0, css_select_1.selectOne)(selector, this, {\n            xmlMode: true,\n            adapter: matcher_1.default,\n        });\n    };\n    /**\n     * find elements by their tagName\n     * @param {string} tagName the tagName of the elements to select\n     */\n    HTMLElement.prototype.getElementsByTagName = function (tagName) {\n        var upperCasedTagName = tagName.toUpperCase();\n        var re = [];\n        var stack = [];\n        var currentNodeReference = this;\n        var index = 0;\n        // index turns to undefined once the stack is empty and the first condition occurs\n        // which happens once all relevant children are searched through\n        while (index !== undefined) {\n            var child = void 0;\n            // make it work with sparse arrays\n            do {\n                child = currentNodeReference.childNodes[index++];\n            } while (index < currentNodeReference.childNodes.length && child === undefined);\n            // if the child does not exist we move on with the last provided index (which belongs to the parentNode)\n            if (child === undefined) {\n                currentNodeReference = currentNodeReference.parentNode;\n                index = stack.pop();\n                continue;\n            }\n            if (child.nodeType === type_1.default.ELEMENT_NODE) {\n                // https://developer.mozilla.org/en-US/docs/Web/API/Element/getElementsByTagName#syntax\n                if (tagName === '*' || child.tagName === upperCasedTagName)\n                    re.push(child);\n                // if children are existing push the current status to the stack and keep searching for elements in the level below\n                if (child.childNodes.length > 0) {\n                    stack.push(index);\n                    currentNodeReference = child;\n                    index = 0;\n                }\n            }\n        }\n        return re;\n    };\n    /**\n     * find element by it's id\n     * @param {string} id the id of the element to select\n     * @returns {HTMLElement | null} the element with the given id or null if not found\n     */\n    HTMLElement.prototype.getElementById = function (id) {\n        var stack = [];\n        var currentNodeReference = this;\n        var index = 0;\n        // index turns to undefined once the stack is empty and the first condition occurs\n        // which happens once all relevant children are searched through\n        while (index !== undefined) {\n            var child = void 0;\n            // make it work with sparse arrays\n            do {\n                child = currentNodeReference.childNodes[index++];\n            } while (index < currentNodeReference.childNodes.length && child === undefined);\n            // if the child does not exist we move on with the last provided index (which belongs to the parentNode)\n            if (child === undefined) {\n                currentNodeReference = currentNodeReference.parentNode;\n                index = stack.pop();\n                continue;\n            }\n            if (child.nodeType === type_1.default.ELEMENT_NODE) {\n                if (child.id === id) {\n                    return child;\n                }\n                ;\n                // if children are existing push the current status to the stack and keep searching for elements in the level below\n                if (child.childNodes.length > 0) {\n                    stack.push(index);\n                    currentNodeReference = child;\n                    index = 0;\n                }\n            }\n        }\n        return null;\n    };\n    /**\n     * traverses the Element and its parents (heading toward the document root) until it finds a node that matches the provided selector string. Will return itself or the matching ancestor. If no such element exists, it returns null.\n     * @param selector a DOMString containing a selector list\n     * @returns {HTMLElement | null} the element with the given id or null if not found\n     */\n    HTMLElement.prototype.closest = function (selector) {\n        var mapChild = new Map();\n        var el = this;\n        var old = null;\n        function findOne(test, elems) {\n            var elem = null;\n            for (var i = 0, l = elems.length; i < l && !elem; i++) {\n                var el_1 = elems[i];\n                if (test(el_1)) {\n                    elem = el_1;\n                }\n                else {\n                    var child = mapChild.get(el_1);\n                    if (child) {\n                        elem = findOne(test, [child]);\n                    }\n                }\n            }\n            return elem;\n        }\n        while (el) {\n            mapChild.set(el, old);\n            old = el;\n            el = el.parentNode;\n        }\n        el = this;\n        while (el) {\n            var e = (0, css_select_1.selectOne)(selector, el, {\n                xmlMode: true,\n                adapter: __assign(__assign({}, matcher_1.default), { getChildren: function (node) {\n                        var child = mapChild.get(node);\n                        return child && [child];\n                    }, getSiblings: function (node) {\n                        return [node];\n                    }, findOne: findOne, findAll: function () {\n                        return [];\n                    } }),\n            });\n            if (e) {\n                return e;\n            }\n            el = el.parentNode;\n        }\n        return null;\n    };\n    /**\n     * Append a child node to childNodes\n     * @param  {Node} node node to append\n     * @return {Node}      node appended\n     */\n    HTMLElement.prototype.appendChild = function (node) {\n        // remove the node from it's parent\n        node.remove();\n        this.childNodes.push(node);\n        node.parentNode = this;\n        return node;\n    };\n    Object.defineProperty(HTMLElement.prototype, \"firstChild\", {\n        /**\n         * Get first child node\n         * @return {Node | undefined} first child node; or undefined if none\n         */\n        get: function () {\n            return this.childNodes[0];\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"lastChild\", {\n        /**\n         * Get last child node\n         * @return {Node | undefined} last child node; or undefined if none\n         */\n        get: function () {\n            return (0, back_1.default)(this.childNodes);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"attrs\", {\n        /**\n         * Get attributes\n         * @access private\n         * @return {Object} parsed and unescaped attributes\n         */\n        get: function () {\n            if (this._attrs) {\n                return this._attrs;\n            }\n            this._attrs = {};\n            var attrs = this.rawAttributes;\n            for (var key in attrs) {\n                var val = attrs[key] || '';\n                this._attrs[key.toLowerCase()] = decode(val);\n            }\n            return this._attrs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"attributes\", {\n        get: function () {\n            var ret_attrs = {};\n            var attrs = this.rawAttributes;\n            for (var key in attrs) {\n                var val = attrs[key] || '';\n                ret_attrs[key] = decode(val);\n            }\n            return ret_attrs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"rawAttributes\", {\n        /**\n         * Get escaped (as-is) attributes\n         * @return {Object} parsed attributes\n         */\n        get: function () {\n            if (this._rawAttrs) {\n                return this._rawAttrs;\n            }\n            var attrs = {};\n            if (this.rawAttrs) {\n                var re = /([a-zA-Z()[\\]#@$.?:][a-zA-Z0-9-_:()[\\]#]*)(?:\\s*=\\s*((?:'[^']*')|(?:\"[^\"]*\")|\\S+))?/g;\n                var match = void 0;\n                while ((match = re.exec(this.rawAttrs))) {\n                    var key = match[1];\n                    var val = match[2] || null;\n                    if (val && (val[0] === \"'\" || val[0] === \"\\\"\"))\n                        val = val.slice(1, val.length - 1);\n                    attrs[key] = attrs[key] || val;\n                }\n            }\n            this._rawAttrs = attrs;\n            return attrs;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    HTMLElement.prototype.removeAttribute = function (key) {\n        var _this = this;\n        var attrs = this.rawAttributes;\n        delete attrs[key];\n        // Update this.attribute\n        if (this._attrs) {\n            delete this._attrs[key];\n        }\n        // Update rawString\n        this.rawAttrs = Object.keys(attrs)\n            .map(function (name) {\n            var val = _this.quoteAttribute(attrs[name]);\n            if (val === 'null' || val === '\"\"')\n                return name;\n            return \"\".concat(name, \"=\").concat(val);\n        })\n            .join(' ');\n        // Update this.id\n        if (key === 'id') {\n            this.id = '';\n        }\n        return this;\n    };\n    HTMLElement.prototype.hasAttribute = function (key) {\n        return key.toLowerCase() in this.attrs;\n    };\n    /**\n     * Get an attribute\n     * @return {string | undefined} value of the attribute; or undefined if not exist\n     */\n    HTMLElement.prototype.getAttribute = function (key) {\n        return this.attrs[key.toLowerCase()];\n    };\n    /**\n     * Set an attribute value to the HTMLElement\n     * @param {string} key The attribute name\n     * @param {string} value The value to set, or null / undefined to remove an attribute\n     */\n    HTMLElement.prototype.setAttribute = function (key, value) {\n        var _this = this;\n        if (arguments.length < 2) {\n            throw new Error(\"Failed to execute 'setAttribute' on 'Element'\");\n        }\n        var k2 = key.toLowerCase();\n        var attrs = this.rawAttributes;\n        for (var k in attrs) {\n            if (k.toLowerCase() === k2) {\n                key = k;\n                break;\n            }\n        }\n        attrs[key] = String(value);\n        // update this.attrs\n        if (this._attrs) {\n            this._attrs[k2] = decode(attrs[key]);\n        }\n        // Update rawString\n        this.rawAttrs = Object.keys(attrs)\n            .map(function (name) {\n            var val = _this.quoteAttribute(attrs[name]);\n            if (val === 'null' || val === '\"\"')\n                return name;\n            return \"\".concat(name, \"=\").concat(val);\n        })\n            .join(' ');\n        // Update this.id\n        if (key === 'id') {\n            this.id = value;\n        }\n        return this;\n    };\n    /**\n     * Replace all the attributes of the HTMLElement by the provided attributes\n     * @param {Attributes} attributes the new attribute set\n     */\n    HTMLElement.prototype.setAttributes = function (attributes) {\n        var _this = this;\n        // Invalidate current this.attributes\n        if (this._attrs) {\n            delete this._attrs;\n        }\n        // Invalidate current this.rawAttributes\n        if (this._rawAttrs) {\n            delete this._rawAttrs;\n        }\n        // Update rawString\n        this.rawAttrs = Object.keys(attributes)\n            .map(function (name) {\n            var val = attributes[name];\n            if (val === 'null' || val === '\"\"')\n                return name;\n            return \"\".concat(name, \"=\").concat(_this.quoteAttribute(String(val)));\n        })\n            .join(' ');\n        return this;\n    };\n    HTMLElement.prototype.insertAdjacentHTML = function (where, html) {\n        var _a, _b, _c;\n        var _this = this;\n        if (arguments.length < 2) {\n            throw new Error('2 arguments required');\n        }\n        var p = parse(html, this._parseOptions);\n        if (where === 'afterend') {\n            var idx = this.parentNode.childNodes.findIndex(function (child) {\n                return child === _this;\n            });\n            resetParent(p.childNodes, this.parentNode);\n            (_a = this.parentNode.childNodes).splice.apply(_a, __spreadArray([idx + 1, 0], p.childNodes, false));\n        }\n        else if (where === 'afterbegin') {\n            resetParent(p.childNodes, this);\n            (_b = this.childNodes).unshift.apply(_b, p.childNodes);\n        }\n        else if (where === 'beforeend') {\n            p.childNodes.forEach(function (n) {\n                _this.appendChild(n);\n            });\n        }\n        else if (where === 'beforebegin') {\n            var idx = this.parentNode.childNodes.findIndex(function (child) {\n                return child === _this;\n            });\n            resetParent(p.childNodes, this.parentNode);\n            (_c = this.parentNode.childNodes).splice.apply(_c, __spreadArray([idx, 0], p.childNodes, false));\n        }\n        else {\n            throw new Error(\"The value provided ('\".concat(where, \"') is not one of 'beforebegin', 'afterbegin', 'beforeend', or 'afterend'\"));\n        }\n        return this;\n        // if (!where || html === undefined || html === null) {\n        // \treturn;\n        // }\n    };\n    Object.defineProperty(HTMLElement.prototype, \"nextSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = 0;\n                while (i < children.length) {\n                    var child = children[i++];\n                    if (this === child)\n                        return children[i] || null;\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"nextElementSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = 0;\n                var find = false;\n                while (i < children.length) {\n                    var child = children[i++];\n                    if (find) {\n                        if (child instanceof HTMLElement) {\n                            return child || null;\n                        }\n                    }\n                    else if (this === child) {\n                        find = true;\n                    }\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"previousSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = children.length;\n                while (i > 0) {\n                    var child = children[--i];\n                    if (this === child)\n                        return children[i - 1] || null;\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"previousElementSibling\", {\n        get: function () {\n            if (this.parentNode) {\n                var children = this.parentNode.childNodes;\n                var i = children.length;\n                var find = false;\n                while (i > 0) {\n                    var child = children[--i];\n                    if (find) {\n                        if (child instanceof HTMLElement) {\n                            return child || null;\n                        }\n                    }\n                    else if (this === child) {\n                        find = true;\n                    }\n                }\n                return null;\n            }\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(HTMLElement.prototype, \"classNames\", {\n        get: function () {\n            return this.classList.toString();\n        },\n        enumerable: false,\n        configurable: true\n    });\n    /**\n     * Clone this Node\n     */\n    HTMLElement.prototype.clone = function () {\n        return parse(this.toString(), this._parseOptions).firstChild;\n    };\n    return HTMLElement;\n}(node_1.default));\nexports[\"default\"] = HTMLElement;\n// https://html.spec.whatwg.org/multipage/custom-elements.html#valid-custom-element-name\nvar kMarkupPattern = /<!--[\\s\\S]*?-->|<(\\/?)([a-zA-Z][-.:0-9_a-zA-Z]*)((?:\\s+[^>]*?(?:(?:'[^']*')|(?:\"[^\"]*\"))?)*)\\s*(\\/?)>/g;\nvar kAttributePattern = /(?:^|\\s)(id|class)\\s*=\\s*((?:'[^']*')|(?:\"[^\"]*\")|\\S+)/gi;\nvar kElementsClosedByOpening = {\n    li: { li: true, LI: true },\n    LI: { li: true, LI: true },\n    p: { p: true, div: true, P: true, DIV: true },\n    P: { p: true, div: true, P: true, DIV: true },\n    b: { div: true, DIV: true },\n    B: { div: true, DIV: true },\n    td: { td: true, th: true, TD: true, TH: true },\n    TD: { td: true, th: true, TD: true, TH: true },\n    th: { td: true, th: true, TD: true, TH: true },\n    TH: { td: true, th: true, TD: true, TH: true },\n    h1: { h1: true, H1: true },\n    H1: { h1: true, H1: true },\n    h2: { h2: true, H2: true },\n    H2: { h2: true, H2: true },\n    h3: { h3: true, H3: true },\n    H3: { h3: true, H3: true },\n    h4: { h4: true, H4: true },\n    H4: { h4: true, H4: true },\n    h5: { h5: true, H5: true },\n    H5: { h5: true, H5: true },\n    h6: { h6: true, H6: true },\n    H6: { h6: true, H6: true },\n};\nvar kElementsClosedByClosing = {\n    li: { ul: true, ol: true, UL: true, OL: true },\n    LI: { ul: true, ol: true, UL: true, OL: true },\n    a: { div: true, DIV: true },\n    A: { div: true, DIV: true },\n    b: { div: true, DIV: true },\n    B: { div: true, DIV: true },\n    i: { div: true, DIV: true },\n    I: { div: true, DIV: true },\n    p: { div: true, DIV: true },\n    P: { div: true, DIV: true },\n    td: { tr: true, table: true, TR: true, TABLE: true },\n    TD: { tr: true, table: true, TR: true, TABLE: true },\n    th: { tr: true, table: true, TR: true, TABLE: true },\n    TH: { tr: true, table: true, TR: true, TABLE: true },\n};\nvar frameflag = 'documentfragmentcontainer';\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n * @param  {string} data      html\n * @return {HTMLElement}      root element\n */\nfunction base_parse(data, options) {\n    var _a, _b;\n    if (options === void 0) { options = {}; }\n    var voidTag = new void_tag_1.default((_a = options === null || options === void 0 ? void 0 : options.voidTag) === null || _a === void 0 ? void 0 : _a.closingSlash, (_b = options === null || options === void 0 ? void 0 : options.voidTag) === null || _b === void 0 ? void 0 : _b.tags);\n    var elements = options.blockTextElements || {\n        script: true,\n        noscript: true,\n        style: true,\n        pre: true,\n    };\n    var element_names = Object.keys(elements);\n    var kBlockTextElements = element_names.map(function (it) { return new RegExp(\"^\".concat(it, \"$\"), 'i'); });\n    var kIgnoreElements = element_names.filter(function (it) { return Boolean(elements[it]); }).map(function (it) { return new RegExp(\"^\".concat(it, \"$\"), 'i'); });\n    function element_should_be_ignore(tag) {\n        return kIgnoreElements.some(function (it) { return it.test(tag); });\n    }\n    function is_block_text_element(tag) {\n        return kBlockTextElements.some(function (it) { return it.test(tag); });\n    }\n    var createRange = function (startPos, endPos) { return [startPos - frameFlagOffset, endPos - frameFlagOffset]; };\n    var root = new HTMLElement(null, {}, '', null, [0, data.length], voidTag, options);\n    var currentParent = root;\n    var stack = [root];\n    var lastTextPos = -1;\n    var noNestedTagIndex = undefined;\n    var match;\n    // https://github.com/taoqf/node-html-parser/issues/38\n    data = \"<\".concat(frameflag, \">\").concat(data, \"</\").concat(frameflag, \">\");\n    var lowerCaseTagName = options.lowerCaseTagName, fixNestedATags = options.fixNestedATags;\n    var dataEndPos = data.length - (frameflag.length + 2);\n    var frameFlagOffset = frameflag.length + 2;\n    while ((match = kMarkupPattern.exec(data))) {\n        // Note: Object destructuring here consistently tests as higher performance than array destructuring\n        // eslint-disable-next-line prefer-const\n        var matchText = match[0], leadingSlash = match[1], tagName = match[2], attributes = match[3], closingSlash = match[4];\n        var matchLength = matchText.length;\n        var tagStartPos = kMarkupPattern.lastIndex - matchLength;\n        var tagEndPos = kMarkupPattern.lastIndex;\n        // Add TextNode if content\n        if (lastTextPos > -1) {\n            if (lastTextPos + matchLength < tagEndPos) {\n                var text = data.substring(lastTextPos, tagStartPos);\n                currentParent.appendChild(new text_1.default(text, currentParent, createRange(lastTextPos, tagStartPos)));\n            }\n        }\n        lastTextPos = kMarkupPattern.lastIndex;\n        // https://github.com/taoqf/node-html-parser/issues/38\n        // Skip frameflag node\n        if (tagName === frameflag)\n            continue;\n        // Handle comments\n        if (matchText[1] === '!') {\n            if (options.comment) {\n                // Only keep what is in between <!-- and -->\n                var text = data.substring(tagStartPos + 4, tagEndPos - 3);\n                currentParent.appendChild(new comment_1.default(text, currentParent, createRange(tagStartPos, tagEndPos)));\n            }\n            continue;\n        }\n        /* -- Handle tag matching -- */\n        // Fix tag casing if necessary\n        if (lowerCaseTagName)\n            tagName = tagName.toLowerCase();\n        // Handle opening tags (ie. <this> not </that>)\n        if (!leadingSlash) {\n            /* Populate attributes */\n            var attrs = {};\n            for (var attMatch = void 0; (attMatch = kAttributePattern.exec(attributes));) {\n                var key = attMatch[1], val = attMatch[2];\n                var isQuoted = val[0] === \"'\" || val[0] === \"\\\"\";\n                attrs[key.toLowerCase()] = isQuoted ? val.slice(1, val.length - 1) : val;\n            }\n            var parentTagName = currentParent.rawTagName;\n            if (!closingSlash && kElementsClosedByOpening[parentTagName]) {\n                if (kElementsClosedByOpening[parentTagName][tagName]) {\n                    stack.pop();\n                    currentParent = (0, back_1.default)(stack);\n                }\n            }\n            // Prevent nested A tags by terminating the last A and starting a new one : see issue #144\n            if (fixNestedATags && (tagName === 'a' || tagName === 'A')) {\n                if (noNestedTagIndex !== undefined) {\n                    stack.splice(noNestedTagIndex);\n                    currentParent = (0, back_1.default)(stack);\n                }\n                noNestedTagIndex = stack.length;\n            }\n            var tagEndPos_1 = kMarkupPattern.lastIndex;\n            var tagStartPos_1 = tagEndPos_1 - matchLength;\n            currentParent = currentParent.appendChild(\n            // Initialize range (end position updated later for closed tags)\n            new HTMLElement(tagName, attrs, attributes.slice(1), null, createRange(tagStartPos_1, tagEndPos_1), voidTag, options));\n            stack.push(currentParent);\n            if (is_block_text_element(tagName)) {\n                // Find closing tag\n                var closeMarkup = \"</\".concat(tagName, \">\");\n                var closeIndex = lowerCaseTagName\n                    ? data.toLocaleLowerCase().indexOf(closeMarkup, kMarkupPattern.lastIndex)\n                    : data.indexOf(closeMarkup, kMarkupPattern.lastIndex);\n                var textEndPos = closeIndex === -1 ? dataEndPos : closeIndex;\n                if (element_should_be_ignore(tagName)) {\n                    var text = data.substring(tagEndPos_1, textEndPos);\n                    if (text.length > 0 && /\\S/.test(text)) {\n                        currentParent.appendChild(new text_1.default(text, currentParent, createRange(tagEndPos_1, textEndPos)));\n                    }\n                }\n                if (closeIndex === -1) {\n                    lastTextPos = kMarkupPattern.lastIndex = data.length + 1;\n                }\n                else {\n                    lastTextPos = kMarkupPattern.lastIndex = closeIndex + closeMarkup.length;\n                    // Cause to be treated as self-closing, because no close found\n                    leadingSlash = '/';\n                }\n            }\n        }\n        // Handle closing tags or self-closed elements (ie </tag> or <br>)\n        if (leadingSlash || closingSlash || voidTag.isVoidElement(tagName)) {\n            while (true) {\n                if (noNestedTagIndex != null && (tagName === 'a' || tagName === 'A'))\n                    noNestedTagIndex = undefined;\n                if (currentParent.rawTagName === tagName) {\n                    // Update range end for closed tag\n                    currentParent.range[1] = createRange(-1, Math.max(lastTextPos, tagEndPos))[1];\n                    stack.pop();\n                    currentParent = (0, back_1.default)(stack);\n                    break;\n                }\n                else {\n                    var parentTagName = currentParent.tagName;\n                    // Trying to close current tag, and move on\n                    if (kElementsClosedByClosing[parentTagName]) {\n                        if (kElementsClosedByClosing[parentTagName][tagName]) {\n                            stack.pop();\n                            currentParent = (0, back_1.default)(stack);\n                            continue;\n                        }\n                    }\n                    // Use aggressive strategy to handle unmatching markups.\n                    break;\n                }\n            }\n        }\n    }\n    return stack;\n}\nexports.base_parse = base_parse;\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n */\nfunction parse(data, options) {\n    if (options === void 0) { options = {}; }\n    var stack = base_parse(data, options);\n    var root = stack[0];\n    var _loop_1 = function () {\n        // Handle each error elements.\n        var last = stack.pop();\n        var oneBefore = (0, back_1.default)(stack);\n        if (last.parentNode && last.parentNode.parentNode) {\n            if (last.parentNode === oneBefore && last.tagName === oneBefore.tagName) {\n                // Pair error case <h3> <h3> handle : Fixes to <h3> </h3>\n                // this is wrong, becouse this will put the H3 outside the current right position which should be inside the current Html Element, see issue 152 for more info\n                if (options.parseNoneClosedTags !== true) {\n                    oneBefore.removeChild(last);\n                    last.childNodes.forEach(function (child) {\n                        oneBefore.parentNode.appendChild(child);\n                    });\n                    stack.pop();\n                }\n            }\n            else {\n                // Single error  <div> <h3> </div> handle: Just removes <h3>\n                // Why remove? this is already a HtmlElement and the missing <H3> is already added in this case. see issue 152 for more info\n                // eslint-disable-next-line no-lonely-if\n                if (options.parseNoneClosedTags !== true) {\n                    oneBefore.removeChild(last);\n                    last.childNodes.forEach(function (child) {\n                        oneBefore.appendChild(child);\n                    });\n                }\n            }\n        }\n        else {\n            // If it's final element just skip.\n        }\n    };\n    while (stack.length > 1) {\n        _loop_1();\n    }\n    // response.childNodes.forEach((node) => {\n    // \tif (node instanceof HTMLElement) {\n    // \t\tnode.parentNode = null;\n    // \t}\n    // });\n    return root;\n}\nexports.parse = parse;\nfunction resetParent(nodes, parent) {\n    return nodes.map(function (node) {\n        node.parentNode = parent;\n        return node;\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/nodes/html.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/nodes/node.js":
/*!**********************************************************!*\
  !*** ./node_modules/node-html-parser/dist/nodes/node.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar he_1 = __webpack_require__(/*! he */ \"(rsc)/./node_modules/he/he.js\");\n/**\n * Node Class as base class for TextNode and HTMLElement.\n */\nvar Node = /** @class */ (function () {\n    function Node(parentNode, range) {\n        if (parentNode === void 0) { parentNode = null; }\n        this.parentNode = parentNode;\n        this.childNodes = [];\n        Object.defineProperty(this, 'range', {\n            enumerable: false,\n            writable: true,\n            configurable: true,\n            value: range !== null && range !== void 0 ? range : [-1, -1]\n        });\n    }\n    /**\n     * Remove current node\n     */\n    Node.prototype.remove = function () {\n        var _this = this;\n        if (this.parentNode) {\n            var children = this.parentNode.childNodes;\n            this.parentNode.childNodes = children.filter(function (child) {\n                return _this !== child;\n            });\n            this.parentNode = null;\n        }\n        return this;\n    };\n    Object.defineProperty(Node.prototype, \"innerText\", {\n        get: function () {\n            return this.rawText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(Node.prototype, \"textContent\", {\n        get: function () {\n            return (0, he_1.decode)(this.rawText);\n        },\n        set: function (val) {\n            this.rawText = (0, he_1.encode)(val);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    return Node;\n}());\nexports[\"default\"] = Node;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L25vZGVzL25vZGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0QsV0FBVyxtQkFBTyxDQUFDLHlDQUFJO0FBQ3ZCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQ0FBcUM7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLEtBQUs7QUFDTDtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzLXN0b2stYWtyYWIvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L25vZGVzL25vZGUuanM/NjNlYyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBoZV8xID0gcmVxdWlyZShcImhlXCIpO1xuLyoqXG4gKiBOb2RlIENsYXNzIGFzIGJhc2UgY2xhc3MgZm9yIFRleHROb2RlIGFuZCBIVE1MRWxlbWVudC5cbiAqL1xudmFyIE5vZGUgPSAvKiogQGNsYXNzICovIChmdW5jdGlvbiAoKSB7XG4gICAgZnVuY3Rpb24gTm9kZShwYXJlbnROb2RlLCByYW5nZSkge1xuICAgICAgICBpZiAocGFyZW50Tm9kZSA9PT0gdm9pZCAwKSB7IHBhcmVudE5vZGUgPSBudWxsOyB9XG4gICAgICAgIHRoaXMucGFyZW50Tm9kZSA9IHBhcmVudE5vZGU7XG4gICAgICAgIHRoaXMuY2hpbGROb2RlcyA9IFtdO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgJ3JhbmdlJywge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiByYW5nZSAhPT0gbnVsbCAmJiByYW5nZSAhPT0gdm9pZCAwID8gcmFuZ2UgOiBbLTEsIC0xXVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogUmVtb3ZlIGN1cnJlbnQgbm9kZVxuICAgICAqL1xuICAgIE5vZGUucHJvdG90eXBlLnJlbW92ZSA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgaWYgKHRoaXMucGFyZW50Tm9kZSkge1xuICAgICAgICAgICAgdmFyIGNoaWxkcmVuID0gdGhpcy5wYXJlbnROb2RlLmNoaWxkTm9kZXM7XG4gICAgICAgICAgICB0aGlzLnBhcmVudE5vZGUuY2hpbGROb2RlcyA9IGNoaWxkcmVuLmZpbHRlcihmdW5jdGlvbiAoY2hpbGQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gX3RoaXMgIT09IGNoaWxkO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB0aGlzLnBhcmVudE5vZGUgPSBudWxsO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzO1xuICAgIH07XG4gICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KE5vZGUucHJvdG90eXBlLCBcImlubmVyVGV4dFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMucmF3VGV4dDtcbiAgICAgICAgfSxcbiAgICAgICAgZW51bWVyYWJsZTogZmFsc2UsXG4gICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZVxuICAgIH0pO1xuICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eShOb2RlLnByb3RvdHlwZSwgXCJ0ZXh0Q29udGVudFwiLCB7XG4gICAgICAgIGdldDogZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmV0dXJuICgwLCBoZV8xLmRlY29kZSkodGhpcy5yYXdUZXh0KTtcbiAgICAgICAgfSxcbiAgICAgICAgc2V0OiBmdW5jdGlvbiAodmFsKSB7XG4gICAgICAgICAgICB0aGlzLnJhd1RleHQgPSAoMCwgaGVfMS5lbmNvZGUpKHZhbCk7XG4gICAgICAgIH0sXG4gICAgICAgIGVudW1lcmFibGU6IGZhbHNlLFxuICAgICAgICBjb25maWd1cmFibGU6IHRydWVcbiAgICB9KTtcbiAgICByZXR1cm4gTm9kZTtcbn0oKSk7XG5leHBvcnRzLmRlZmF1bHQgPSBOb2RlO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/nodes/node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/nodes/text.js":
/*!**********************************************************!*\
  !*** ./node_modules/node-html-parser/dist/nodes/text.js ***!
  \**********************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __extends = (this && this.__extends) || (function () {\n    var extendStatics = function (d, b) {\n        extendStatics = Object.setPrototypeOf ||\n            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n        return extendStatics(d, b);\n    };\n    return function (d, b) {\n        if (typeof b !== \"function\" && b !== null)\n            throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n        extendStatics(d, b);\n        function __() { this.constructor = d; }\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n    };\n})();\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar he_1 = __webpack_require__(/*! he */ \"(rsc)/./node_modules/he/he.js\");\nvar node_1 = __importDefault(__webpack_require__(/*! ./node */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/node.js\"));\nvar type_1 = __importDefault(__webpack_require__(/*! ./type */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/type.js\"));\n/**\n * TextNode to contain a text element in DOM tree.\n * @param {string} value [description]\n */\nvar TextNode = /** @class */ (function (_super) {\n    __extends(TextNode, _super);\n    function TextNode(rawText, parentNode, range) {\n        if (parentNode === void 0) { parentNode = null; }\n        var _this = _super.call(this, parentNode, range) || this;\n        /**\n         * Node Type declaration.\n         * @type {Number}\n         */\n        _this.nodeType = type_1.default.TEXT_NODE;\n        _this.rawTagName = '';\n        _this._rawText = rawText;\n        return _this;\n    }\n    TextNode.prototype.clone = function () {\n        return new TextNode(this._rawText, null);\n    };\n    Object.defineProperty(TextNode.prototype, \"rawText\", {\n        get: function () {\n            return this._rawText;\n        },\n        /**\n         * Set rawText and invalidate trimmed caches\n         */\n        set: function (text) {\n            this._rawText = text;\n            this._trimmedRawText = void 0;\n            this._trimmedText = void 0;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"trimmedRawText\", {\n        /**\n         * Returns raw text with all whitespace trimmed except single leading/trailing non-breaking space\n         */\n        get: function () {\n            if (this._trimmedRawText !== undefined)\n                return this._trimmedRawText;\n            this._trimmedRawText = trimText(this.rawText);\n            return this._trimmedRawText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"trimmedText\", {\n        /**\n         * Returns text with all whitespace trimmed except single leading/trailing non-breaking space\n         */\n        get: function () {\n            if (this._trimmedText !== undefined)\n                return this._trimmedText;\n            this._trimmedText = trimText(this.text);\n            return this._trimmedText;\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"text\", {\n        /**\n         * Get unescaped text value of current node and its children.\n         * @return {string} text content\n         */\n        get: function () {\n            return (0, he_1.decode)(this.rawText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    Object.defineProperty(TextNode.prototype, \"isWhitespace\", {\n        /**\n         * Detect if the node contains only white space.\n         * @return {boolean}\n         */\n        get: function () {\n            return /^(\\s|&nbsp;)*$/.test(this.rawText);\n        },\n        enumerable: false,\n        configurable: true\n    });\n    TextNode.prototype.toString = function () {\n        return this.rawText;\n    };\n    return TextNode;\n}(node_1.default));\nexports[\"default\"] = TextNode;\n/**\n * Trim whitespace except single leading/trailing non-breaking space\n */\nfunction trimText(text) {\n    var i = 0;\n    var startPos;\n    var endPos;\n    while (i >= 0 && i < text.length) {\n        if (/\\S/.test(text[i])) {\n            if (startPos === undefined) {\n                startPos = i;\n                i = text.length;\n            }\n            else {\n                endPos = i;\n                i = void 0;\n            }\n        }\n        if (startPos === undefined)\n            i++;\n        else\n            i--;\n    }\n    if (startPos === undefined)\n        startPos = 0;\n    if (endPos === undefined)\n        endPos = text.length - 1;\n    var hasLeadingSpace = startPos > 0 && /[^\\S\\r\\n]/.test(text[startPos - 1]);\n    var hasTrailingSpace = endPos < (text.length - 1) && /[^\\S\\r\\n]/.test(text[endPos + 1]);\n    return (hasLeadingSpace ? ' ' : '') + text.slice(startPos, endPos + 1) + (hasTrailingSpace ? ' ' : '');\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/nodes/text.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/nodes/type.js":
/*!**********************************************************!*\
  !*** ./node_modules/node-html-parser/dist/nodes/type.js ***!
  \**********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar NodeType;\n(function (NodeType) {\n    NodeType[NodeType[\"ELEMENT_NODE\"] = 1] = \"ELEMENT_NODE\";\n    NodeType[NodeType[\"TEXT_NODE\"] = 3] = \"TEXT_NODE\";\n    NodeType[NodeType[\"COMMENT_NODE\"] = 8] = \"COMMENT_NODE\";\n})(NodeType || (NodeType = {}));\nexports[\"default\"] = NodeType;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L25vZGVzL3R5cGUuanMiLCJtYXBwaW5ncyI6IkFBQWE7QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLENBQUMsNEJBQTRCO0FBQzdCLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzLXN0b2stYWtyYWIvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L25vZGVzL3R5cGUuanM/Y2FlMSJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbnZhciBOb2RlVHlwZTtcbihmdW5jdGlvbiAoTm9kZVR5cGUpIHtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkVMRU1FTlRfTk9ERVwiXSA9IDFdID0gXCJFTEVNRU5UX05PREVcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIlRFWFRfTk9ERVwiXSA9IDNdID0gXCJURVhUX05PREVcIjtcbiAgICBOb2RlVHlwZVtOb2RlVHlwZVtcIkNPTU1FTlRfTk9ERVwiXSA9IDhdID0gXCJDT01NRU5UX05PREVcIjtcbn0pKE5vZGVUeXBlIHx8IChOb2RlVHlwZSA9IHt9KSk7XG5leHBvcnRzLmRlZmF1bHQgPSBOb2RlVHlwZTtcbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/nodes/type.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/parse.js":
/*!*****************************************************!*\
  !*** ./node_modules/node-html-parser/dist/parse.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports[\"default\"] = void 0;\nvar html_1 = __webpack_require__(/*! ./nodes/html */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/html.js\");\nObject.defineProperty(exports, \"default\", ({ enumerable: true, get: function () { return html_1.parse; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L3BhcnNlLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtCQUFlO0FBQ2YsYUFBYSxtQkFBTyxDQUFDLDhFQUFjO0FBQ25DLDJDQUEwQyxFQUFFLHFDQUFxQyx3QkFBd0IsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL2Rhcy1zdG9rLWFrcmFiLy4vbm9kZV9tb2R1bGVzL25vZGUtaHRtbC1wYXJzZXIvZGlzdC9wYXJzZS5qcz84MThjIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5kZWZhdWx0ID0gdm9pZCAwO1xudmFyIGh0bWxfMSA9IHJlcXVpcmUoXCIuL25vZGVzL2h0bWxcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJkZWZhdWx0XCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBodG1sXzEucGFyc2U7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/parse.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/valid.js":
/*!*****************************************************!*\
  !*** ./node_modules/node-html-parser/dist/valid.js ***!
  \*****************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar html_1 = __webpack_require__(/*! ./nodes/html */ \"(rsc)/./node_modules/node-html-parser/dist/nodes/html.js\");\n/**\n * Parses HTML and returns a root element\n * Parse a chuck of HTML source.\n */\nfunction valid(data, options) {\n    if (options === void 0) { options = {}; }\n    var stack = (0, html_1.base_parse)(data, options);\n    return Boolean(stack.length === 1);\n}\nexports[\"default\"] = valid;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L3ZhbGlkLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGFBQWEsbUJBQU8sQ0FBQyw4RUFBYztBQUNuQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOEJBQThCO0FBQzlCO0FBQ0E7QUFDQTtBQUNBLGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzLXN0b2stYWtyYWIvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L3ZhbGlkLmpzP2RjNTkiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgaHRtbF8xID0gcmVxdWlyZShcIi4vbm9kZXMvaHRtbFwiKTtcbi8qKlxuICogUGFyc2VzIEhUTUwgYW5kIHJldHVybnMgYSByb290IGVsZW1lbnRcbiAqIFBhcnNlIGEgY2h1Y2sgb2YgSFRNTCBzb3VyY2UuXG4gKi9cbmZ1bmN0aW9uIHZhbGlkKGRhdGEsIG9wdGlvbnMpIHtcbiAgICBpZiAob3B0aW9ucyA9PT0gdm9pZCAwKSB7IG9wdGlvbnMgPSB7fTsgfVxuICAgIHZhciBzdGFjayA9ICgwLCBodG1sXzEuYmFzZV9wYXJzZSkoZGF0YSwgb3B0aW9ucyk7XG4gICAgcmV0dXJuIEJvb2xlYW4oc3RhY2subGVuZ3RoID09PSAxKTtcbn1cbmV4cG9ydHMuZGVmYXVsdCA9IHZhbGlkO1xuIl0sIm5hbWVzIjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/valid.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/node-html-parser/dist/void-tag.js":
/*!********************************************************!*\
  !*** ./node_modules/node-html-parser/dist/void-tag.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nvar VoidTag = /** @class */ (function () {\n    function VoidTag(addClosingSlash, tags) {\n        if (addClosingSlash === void 0) { addClosingSlash = false; }\n        this.addClosingSlash = addClosingSlash;\n        if (Array.isArray(tags)) {\n            this.voidTags = tags.reduce(function (set, tag) {\n                return set.add(tag.toLowerCase()).add(tag.toUpperCase()).add(tag);\n            }, new Set());\n        }\n        else {\n            this.voidTags = ['area', 'base', 'br', 'col', 'embed', 'hr', 'img', 'input', 'link', 'meta', 'param', 'source', 'track', 'wbr'].reduce(function (set, tag) {\n                return set.add(tag.toLowerCase()).add(tag.toUpperCase()).add(tag);\n            }, new Set());\n        }\n    }\n    VoidTag.prototype.formatNode = function (tag, attrs, innerHTML) {\n        var addClosingSlash = this.addClosingSlash;\n        var closingSpace = (addClosingSlash && attrs && !attrs.endsWith(' ')) ? ' ' : '';\n        var closingSlash = addClosingSlash ? \"\".concat(closingSpace, \"/\") : '';\n        return this.isVoidElement(tag.toLowerCase()) ? \"<\".concat(tag).concat(attrs).concat(closingSlash, \">\") : \"<\".concat(tag).concat(attrs, \">\").concat(innerHTML, \"</\").concat(tag, \">\");\n    };\n    VoidTag.prototype.isVoidElement = function (tag) {\n        return this.voidTags.has(tag);\n    };\n    return VoidTag;\n}());\nexports[\"default\"] = VoidTag;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L3ZvaWQtdGFnLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdEO0FBQ0E7QUFDQSwwQ0FBMEM7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELGtCQUFlIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vZGFzLXN0b2stYWtyYWIvLi9ub2RlX21vZHVsZXMvbm9kZS1odG1sLXBhcnNlci9kaXN0L3ZvaWQtdGFnLmpzPzlkZTgiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG52YXIgVm9pZFRhZyA9IC8qKiBAY2xhc3MgKi8gKGZ1bmN0aW9uICgpIHtcbiAgICBmdW5jdGlvbiBWb2lkVGFnKGFkZENsb3NpbmdTbGFzaCwgdGFncykge1xuICAgICAgICBpZiAoYWRkQ2xvc2luZ1NsYXNoID09PSB2b2lkIDApIHsgYWRkQ2xvc2luZ1NsYXNoID0gZmFsc2U7IH1cbiAgICAgICAgdGhpcy5hZGRDbG9zaW5nU2xhc2ggPSBhZGRDbG9zaW5nU2xhc2g7XG4gICAgICAgIGlmIChBcnJheS5pc0FycmF5KHRhZ3MpKSB7XG4gICAgICAgICAgICB0aGlzLnZvaWRUYWdzID0gdGFncy5yZWR1Y2UoZnVuY3Rpb24gKHNldCwgdGFnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNldC5hZGQodGFnLnRvTG93ZXJDYXNlKCkpLmFkZCh0YWcudG9VcHBlckNhc2UoKSkuYWRkKHRhZyk7XG4gICAgICAgICAgICB9LCBuZXcgU2V0KCkpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy52b2lkVGFncyA9IFsnYXJlYScsICdiYXNlJywgJ2JyJywgJ2NvbCcsICdlbWJlZCcsICdocicsICdpbWcnLCAnaW5wdXQnLCAnbGluaycsICdtZXRhJywgJ3BhcmFtJywgJ3NvdXJjZScsICd0cmFjaycsICd3YnInXS5yZWR1Y2UoZnVuY3Rpb24gKHNldCwgdGFnKSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHNldC5hZGQodGFnLnRvTG93ZXJDYXNlKCkpLmFkZCh0YWcudG9VcHBlckNhc2UoKSkuYWRkKHRhZyk7XG4gICAgICAgICAgICB9LCBuZXcgU2V0KCkpO1xuICAgICAgICB9XG4gICAgfVxuICAgIFZvaWRUYWcucHJvdG90eXBlLmZvcm1hdE5vZGUgPSBmdW5jdGlvbiAodGFnLCBhdHRycywgaW5uZXJIVE1MKSB7XG4gICAgICAgIHZhciBhZGRDbG9zaW5nU2xhc2ggPSB0aGlzLmFkZENsb3NpbmdTbGFzaDtcbiAgICAgICAgdmFyIGNsb3NpbmdTcGFjZSA9IChhZGRDbG9zaW5nU2xhc2ggJiYgYXR0cnMgJiYgIWF0dHJzLmVuZHNXaXRoKCcgJykpID8gJyAnIDogJyc7XG4gICAgICAgIHZhciBjbG9zaW5nU2xhc2ggPSBhZGRDbG9zaW5nU2xhc2ggPyBcIlwiLmNvbmNhdChjbG9zaW5nU3BhY2UsIFwiL1wiKSA6ICcnO1xuICAgICAgICByZXR1cm4gdGhpcy5pc1ZvaWRFbGVtZW50KHRhZy50b0xvd2VyQ2FzZSgpKSA/IFwiPFwiLmNvbmNhdCh0YWcpLmNvbmNhdChhdHRycykuY29uY2F0KGNsb3NpbmdTbGFzaCwgXCI+XCIpIDogXCI8XCIuY29uY2F0KHRhZykuY29uY2F0KGF0dHJzLCBcIj5cIikuY29uY2F0KGlubmVySFRNTCwgXCI8L1wiKS5jb25jYXQodGFnLCBcIj5cIik7XG4gICAgfTtcbiAgICBWb2lkVGFnLnByb3RvdHlwZS5pc1ZvaWRFbGVtZW50ID0gZnVuY3Rpb24gKHRhZykge1xuICAgICAgICByZXR1cm4gdGhpcy52b2lkVGFncy5oYXModGFnKTtcbiAgICB9O1xuICAgIHJldHVybiBWb2lkVGFnO1xufSgpKTtcbmV4cG9ydHMuZGVmYXVsdCA9IFZvaWRUYWc7XG4iXSwibmFtZXMiOltdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/node-html-parser/dist/void-tag.js\n");

/***/ })

};
;